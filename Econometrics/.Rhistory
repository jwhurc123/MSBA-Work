# Removing unnecessary columns: Country.Code, Year, Inflation.Rate, Unemployment, Land, and Continent.Name
Sub_Final_Data <- subset(Final_Data, select= -c(Country.Code,Year,Inflation.Rate,Unemployment,Land,Continent.Name))
# Drop rows with NULL values in CO2 and FDI columns
Sub_Final_Data <- subset(Sub_Final_Data, CO2 != ".." & FDI != "..")
# Removing countries with null values in Net Trade, which contain countries with a small or immeasurable amount of foreign trade
Final_Data_With_Trade <- subset(Sub_Final_Data, is.na(Net.Trade) == FALSE)
# Filling any leftover null values with zero. This removes the last of the null values and completes the data cleaning
Project_Data <- replace(Final_Data_With_Trade, is.na(Final_Data_With_Trade), 0)
##Dummy Variable for if country is a net exporter. Positive if net trade is greater than 1, and 0 if otherwise
Project_Data$Exporter = ifelse(Project_Data$Net.Trade > 0, 1, 0)
## Re-scaling the data so the numbers are easier to interpret
# Dividing GDP, R&D, Population, Export, Import, Education.Expenditure, Health Expenditure, Net Trade, and FDI by 1,000,000,000
Project_Data$GDP <- Project_Data$GDP / 1000000000
Project_Data$R.D <- Project_Data$R.D / 1000000000
Project_Data$Population <- Project_Data$Population / 1000000000
Project_Data$Export <- Project_Data$Export / 1000000000
Project_Data$Import <- Project_Data$Import / 1000000000
Project_Data$Education.Expenditure <- Project_Data$Education.Expenditure / 1000000000
Project_Data$Health.Expenditure <- Project_Data$Health.Expenditure / 1000000000
Project_Data$Net.Trade <- Project_Data$Net.Trade / 1000000000
Project_Data$FDI <- Project_Data$FDI / 1000000000
# Dividing Population Density by 1,000
Project_Data$Population.Density <- Project_Data$Population.Density / 1000
# Dividing GDP Per Capita by 1,000
Project_Data$GDP.Per.Capita <- Project_Data$GDP.Per.Capita / 1000
## Cleans workspace of all dataframes used to build the final dataframe
rm(list=c("CO2","CO2_2020","Countries","Countries_2020","FDI","FDI_2020","list_df","Final_Data", "Sub_Final_Data", "Final_Data_With_Trade"))
## Summarizes the data
str(Project_Data)
Project_Data$Exporter = ifelse(Project_Data$Net.Trade > 0, 1, 0)
Project_Data <- unique(Project_Data)
## Exploratory Data Analysis (EDA)
### Summary Statistics
# Display summary statistics for key variables in the dataset
stargazer(Project_Data, type="text", digits=2, summary.stat=c("n", "mean", "median", "sd"), title="Summary Statistics", flip=FALSE)
# Create histogram plot for key variables CO2 Emissions and FDI
par(mfrow = c(2, 2)) # Set up a 2x2 grid for plots
hist(Project_Data$CO2, main = "Distribution of CO2 Emissions", xlab = "CO2 Emissions", col = "lightblue", border = "black")
hist(Project_Data$FDI, main = "Distribution of Net Foreign Direct Investment", xlab = "Net FDI (US$)", col = "purple", border = "black")
# Scatterplot of CO2 vs FDI
ggplot(Project_Data, aes(x = FDI, y = CO2)) +
geom_point(col = "lightblue3") +
labs(title = "Scatterplot of CO2 Emissions vs Foreign Direct Investment",
x = "Net Foreign Direct Investment (US$)",
y = "CO2 Emissions (Metric Ton per Capita")
# Creates new variable for the natural log of CO2
Project_Data$log_CO2 <- log(Project_Data$CO2)
ggplot(Project_Data, aes(x = FDI, y = log_CO2)) +
geom_point(col = "lightblue3") +
labs(title = "Scatterplot of CO2 Emissions vs Foreign Direct Investment",
x = "Net Foreign Direct Investment (US$)" ,
y = "Natural Log of CO2 Emissions")
### Basic Regression
# Runs various regressions on key variables and
lr1 <- lm(log(CO2)~FDI, data=Project_Data)
lr2 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) , data=Project_Data)
lr3 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) + Population.Density, data=Project_Data)
lr4 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) + Population.Density + Per_Agri, data=Project_Data)
lr5 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) + Population.Density + Per_Agri + Per_Industry, data=Project_Data)
lr6 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) + Population.Density+ Per_Agri + Per_Industry + Export + Import, data=Project_Data)
lr7 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) + Per_Industry + Per_Agri,data=Project_Data)
stargazer(lr1, lr2, lr3, lr4, lr5, lr6, lr7, se=list(cse(lr1),cse(lr2),cse(lr3),cse(lr4),cse(lr5),cse(lr6),cse(lr7)),
title="Factors affecting CO2 Emissions", type="text", star.cutoffs=NA, df=FALSE, digits=3)
cor(Project_Data$Per_Agri, Project_Data$Per_Industry)
stargazer(lr7, se=list(cse(lr7)),
title="Factors affecting CO2 Emissions", type="text", star.cutoffs=NA, df=FALSE, digits=3)
cor(Project_Data$Per_Agri, Project_Data$Per_Industry)
### F-tests conducted to determine if variables should be included in the model
# F-test on whether Per_Industry and Per_Agri are both statistically different from zero in model 6
lht(lr6,c("Per_Industry=0","Per_Agri=0"), white.adjust="hc1")
# F-test on whether Export and Import are both statistically different form zero in model 6
lht(lr6, c("Export=0", "Import=0"), white.adjust="hc1")
# F-test on whether Per_Industry and Per_Agri are both statistically different from zero in model 7
lht(lr7, c("Per_Industry=0","Per_Agri=0"),white.adjust="hc1")
### Here is where we test alternate regression models based on the the base model found above.
## Alternate regression part 1: quadratic and cubic models vs linear model
# Alternate regression 1: adding FDI squared to the base model
ar1 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+I(FDI^2),data=Project_Data)
# Alternate regression 2: adding FDI squared and FDI cubed to the base model
ar2 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+I(FDI^3),data=Project_Data)
## Alternate regression part 2: adding additional regressors to the base model
# Alternate regression 3: adding education expenditure (% GDP) to base model
ar3 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+Per_Edu,data=Project_Data)
# Alternate regression 4: adding education expenditure (% GDP) and health expenditure (% GDP) to base model
ar4 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+Per_Edu+Per_Health,data=Project_Data)
## Alternate regression part 3: taking the natural log of some of the control variables in the base model
# Alternate regression 5: natural log of GDP per Capita
ar5 <- lm(log(CO2)~FDI+Per_Agri+I(log(GDP.Per.Capita)), data=Project_Data)
## Alternate regression part 4: does innovation help climate change?
# Alternate regression 6: adding variable measuring ease of business and its interaction with FDI
ar6 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+Bus_Support+FDI:Bus_Support, data=Project_Data)
# Alternate regression 7: adding variable measuring R&D spending and its interaction with FDI
ar7 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+R.D+FDI:R.D, data=Project_Data)
# Alternate reression 8: including interaction between log(GDP.Per.Capita) and FDI
ar8 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+FDI:log(GDP.Per.Capita), data=Project_Data)
# Alternate regression 9: including interaction between Bus_Support and log(GDP.Per.Capita)
ar9 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+Bus_Support+Bus_Support:log(GDP.Per.Capita), data=Project_Data)
# Alternate regression 10: including all interaction variables
ar10 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+Bus_Support+R.D+FDI:R.D+FDI:log(GDP.Per.Capita)+R.D:log(GDP.Per.Capita)+FDI:Bus_Support+Bus_Support:log(GDP.Per.Capita), data=Project_Data)
# Displays alternate models onto one table
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, ar9, ar10, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8),cse(ar9),cse(ar10)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
lht(ar2,c("I(FDI^2)=0","I(FDI^3)"=0), white.adjust="hc1")
lht(ar2,c("I(FDI2)=0","I(FDI3)=0"), white.adjust="hc1")
lht(ar2,c("I(FDI^2)=0","I(FDI^3)=0"), white.adjust="hc1")
ar2 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+I(FDI^2)+I(FDI^3),data=Project_Data)
lht(ar2,c("I(FDI^2)=0","I(FDI^3)=0"), white.adjust="hc1")
lht(ar2,c("I(FDI2)=0","I(FDI3)=0"), white.adjust="hc1")
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, ar9, ar10, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8),cse(ar9),cse(ar10)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
lht(ar2,c("I(FDI2)=0", "I(FDI3)=0"), white.adjust="hc1")
lht(ar2,c("FDI2=0", "FDI3=0"), white.adjust="hc1")
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, ar9, ar10, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8),cse(ar9),cse(ar10)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
lht(ar4,c("Per_Edu=0","Per_Health=0"),white.adjust="hc1")
# F-test to see if both
lht(ar4,c("Per_Edu=0","Per_Health=0","Per_Agri=0","Per_Industry=0"),white.adjust="hc1")
lht(ar5,c("Per_Edu=0","Per_Health=0"),white.adjust="hc1")
ar4 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+Per_Health,data=Project_Data)
ar5 <- lm(log(CO2)~FDI+log(GDP.Per.Capita)+Per_Industry+Per_Agri+Per_Edu+Per_Health,data=Project_Data)
lht(ar5,c("Per_Edu=0","Per_Health=0"),white.adjust="hc1")
ar6 <- lm(log(CO2)~FDI + I(log(GDP.Per.Capita)) + I(log(GDP.Per.Capita)^2) + Per_Industry + Per_Agri,data=Project_Data)
ar7 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+FDI:R.D+FDI:I(log(GDP.Per.Capita))+R.D:I(log(GDP.Per.Capita))+FDI:Bus_Support+Bus_Support:I(log(GDP.Per.Capita)), data=Project_Data)
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7,, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
lht(ar7,c("Bus_Support=0","FDI:Bus_Support=0"),white.adjust="hc1")
lht(ar7,c("Bus_Support=0","R.D=0"),white.adjust="hc1")
ar8 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+Bus_Support:I(log(GDP.Per.Capita)), data=Project_Data)
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8 se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8)),
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
lht(ar5,c("Per_Edu=0","Per_Health=0"),white.adjust="hc1")
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
### Here is where we test alternate regression models based on the the base model found above.
## Alternate regression part 1: quadratic and cubic models vs linear model
# Alternate regression 1: adding FDI squared to the base model
ar1 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+I(FDI^2),data=Project_Data)
# Alternate regression 2: adding FDI squared and FDI cubed to the base model
ar2 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+I(FDI^2)+I(FDI^3),data=Project_Data)
## Alternate regression part 2: adding additional regressors to the base model
# Alternate regression 3: adding education expenditure (% GDP) to base model
ar3 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Per_Edu,data=Project_Data)
# Alternate regression 4: adding health expenditure (% GDP) to base model
ar4 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Per_Health,data=Project_Data)
# Alternate regression 5: adding education expenditure (% GDP) and health expenditure (% GDP) to base model
ar5 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Per_Edu+Per_Health,data=Project_Data)
# F-test to see if Per_Edu and Per_Health should be added to the model together
lht(ar5,c("Per_Edu=0","Per_Health=0"),white.adjust="hc1")
## Alternate regression part 3: taking the square of the natural log of GDP per Capita to reflect the quadratic relationship with GDP per Capita and Environment Degradation shown in the Kuznetz Curve.
# Alternate regression 6: natural log of GDP per Capita squared
ar6 <- lm(log(CO2)~FDI + I(log(GDP.Per.Capita)) + I(log(GDP.Per.Capita)^2) + Per_Industry + Per_Agri,data=Project_Data)
## Alternate regression part 4: does innovation help climate change?
# Alternate regression 7: including all possible interaction variables between FDI, R.D, log(GDP.Per.Capita), and Bus_Support
ar7 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+FDI:R.D+FDI:I(log(GDP.Per.Capita))+R.D:I(log(GDP.Per.Capita))+FDI:Bus_Support+Bus_Support:I(log(GDP.Per.Capita)), data=Project_Data)
# F-test to see if Bus_Support and R.D variables are both statistically different from zero
lht(ar7,c("Bus_Support=0","R.D=0"),white.adjust="hc1")
# Alternate regression 8: regression 7 with removing any interaction variables that fail a t-test
ar8 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+Bus_Support:log(GDP.Per.Capita), data=Project_Data)
## Displays alternate models onto one table
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
### Setup for RStudio to work with data
#Clear the working space
rm(list = ls())
#Set working directory
#setwd("C:/Users/Justin Hurcombe/Documents/ECON2509-Econometrics/Final Project")
#getwd()
#Loads all needed packages
library(tidyverse)
library(doBy)
library(foreign)
library(knitr)
library(lmtest)
library(readstata13)
library(sandwich)
library(stargazer)
library(AER)
library(gdata)
library(wooldridge)
library(openintro)
library(readxl)
library(readr)
library(dplyr)
#Calculates heteroskedastic-robust errors
cse=function(reg){
rob=sqrt(diag(vcovHC(reg,type="HC1")))
return(rob)
}
### Data section
## Creating dataframe from three data sources, all available on worldbank.org
# Loads all csv files as separate data frames
Countries <- read.csv("Countries.csv")
CO2 <- read.csv("CO2.csv")
FDI <- read.csv("FDI.csv")
# Creates and formats all dataframes into 2020 economic indicators, CO2 emissions, and FDI net imports per country
Countries_2020 <- Countries[Countries$Year=="2020",]
CO2_2020 <- CO2[,c("Country.Name","X2020..YR2020.")] %>% rename(CO2=X2020..YR2020.)
FDI_2020 <- FDI[,c("Country.Name","X2020..YR2020.")] %>% rename(FDI=X2020..YR2020.)
# Merge all three dataframes into one single dataframe
list_df <- list(Countries_2020,CO2_2020,FDI_2020)
Final_Data <- list_df %>% reduce(inner_join, by="Country.Name")
# Rename data columns so it's easier to wprk with
Final_Data <- rename(Final_Data,Per_Agri=Agriculture....GDP., Bus_Support=Ease.of.Doing.Business, Per_Edu=Education.Expenditure....GDP., Per_Export=Export....GDP., Per_Health=Health.Expenditure....GDP., Per_Import=Import....GDP., Per_Industry=Industry....GDP., Per_Service=Service....GDP.)
# Convert new columns CO2 and FDI from characters to numbers
Final_Data$CO2 <- as.numeric(Final_Data$CO2)
Final_Data$FDI <- as.numeric(Final_Data$FDI)
## Removing NULL values
# Finding how much of dataset consists of NULL values
sum(is.na(Final_Data))/(nrow(Final_Data)*ncol(Final_Data)) * 100
sum(is.na(Final_Data))
colSums(is.na(Final_Data))
# Removing unnecessary columns: Country.Code, Year, Inflation.Rate, Unemployment, Land, and Continent.Name
Sub_Final_Data <- subset(Final_Data, select= -c(Country.Code,Year,Inflation.Rate,Unemployment,Land,Continent.Name))
# Drop rows with NULL values in CO2 and FDI columns
Sub_Final_Data <- subset(Sub_Final_Data, CO2 != ".." & FDI != "..")
# Removing countries with null values in Net Trade, which contain countries with a small or immeasurable amount of foreign trade
Final_Data_With_Trade <- subset(Sub_Final_Data, is.na(Net.Trade) == FALSE)
# Filling any leftover null values with zero. This removes the last of the null values and completes the data cleaning
Project_Data <- replace(Final_Data_With_Trade, is.na(Final_Data_With_Trade), 0)
##Dummy Variable for if country is a net exporter. Positive if net trade is greater than 1, and 0 if otherwise
Project_Data$Exporter = ifelse(Project_Data$Net.Trade > 0, 1, 0)
## Re-scaling the data so the numbers are easier to interpret
# Dividing GDP, R&D, Population, Export, Import, Education.Expenditure, Health Expenditure, Net Trade, and FDI by 1,000,000,000
Project_Data$GDP <- Project_Data$GDP / 1000000000
Project_Data$R.D <- Project_Data$R.D / 1000000000
Project_Data$Population <- Project_Data$Population / 1000000000
Project_Data$Export <- Project_Data$Export / 1000000000
Project_Data$Import <- Project_Data$Import / 1000000000
Project_Data$Education.Expenditure <- Project_Data$Education.Expenditure / 1000000000
Project_Data$Health.Expenditure <- Project_Data$Health.Expenditure / 1000000000
Project_Data$Net.Trade <- Project_Data$Net.Trade / 1000000000
Project_Data$FDI <- Project_Data$FDI / 1000000000
# Dividing Population Density by 1,000
Project_Data$Population.Density <- Project_Data$Population.Density / 1000
# Dividing GDP Per Capita by 1,000
Project_Data$GDP.Per.Capita <- Project_Data$GDP.Per.Capita / 1000
## Cleans workspace of all dataframes used to build the final dataframe
rm(list=c("CO2","CO2_2020","Countries","Countries_2020","FDI","FDI_2020","list_df","Final_Data", "Sub_Final_Data", "Final_Data_With_Trade"))
## Summarizes the data
str(Project_Data)
Project_Data$Exporter = ifelse(Project_Data$Net.Trade > 0, 1, 0)
Project_Data <- unique(Project_Data)
## Exploratory Data Analysis (EDA)
### Summary Statistics
# Display summary statistics for key variables in the dataset
stargazer(Project_Data, type="text", digits=2, summary.stat=c("n", "mean", "median", "sd"), title="Summary Statistics", flip=FALSE)
# Create histogram plot for key variables CO2 Emissions and FDI
par(mfrow = c(2, 2)) # Set up a 2x2 grid for plots
hist(Project_Data$CO2, main = "Distribution of CO2 Emissions", xlab = "CO2 Emissions", col = "lightblue", border = "black")
### Here is where we test alternate regression models based on the the base model found above.
## Alternate regression part 1: quadratic and cubic models vs linear model
# Alternate regression 1: adding FDI squared to the base model
ar1 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+I(FDI^2),data=Project_Data)
# Alternate regression 2: adding FDI squared and FDI cubed to the base model
ar2 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+I(FDI^2)+I(FDI^3),data=Project_Data)
## Alternate regression part 2: adding additional regressors to the base model
# Alternate regression 3: adding education expenditure (% GDP) to base model
ar3 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Per_Edu,data=Project_Data)
# Alternate regression 4: adding health expenditure (% GDP) to base model
ar4 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Per_Health,data=Project_Data)
# Alternate regression 5: adding education expenditure (% GDP) and health expenditure (% GDP) to base model
ar5 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Per_Edu+Per_Health,data=Project_Data)
# F-test to see if Per_Edu and Per_Health should be added to the model together
lht(ar5,c("Per_Edu=0","Per_Health=0"),white.adjust="hc1")
## Alternate regression part 3: taking the square of the natural log of GDP per Capita to reflect the quadratic relationship with GDP per Capita and Environment Degradation shown in the Kuznetz Curve.
# Alternate regression 6: natural log of GDP per Capita squared
ar6 <- lm(log(CO2)~FDI + I(log(GDP.Per.Capita)) + I(log(GDP.Per.Capita)^2) + Per_Industry + Per_Agri,data=Project_Data)
## Alternate regression part 4: does innovation help climate change?
# Alternate regression 7: including all possible interaction variables between FDI, R.D, log(GDP.Per.Capita), and Bus_Support
ar7 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+FDI:R.D+FDI:I(log(GDP.Per.Capita))+R.D:I(log(GDP.Per.Capita))+FDI:Bus_Support+Bus_Support:I(log(GDP.Per.Capita)), data=Project_Data)
# F-test to see if Bus_Support and R.D variables are both statistically different from zero
lht(ar7,c("Bus_Support=0","R.D=0"),white.adjust="hc1")
# Alternate regression 8: regression 7 with removing any interaction variables that fail a t-test
ar8 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+Bus_Support:log(GDP.Per.Capita), data=Project_Data)
## Displays alternate models onto one table
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
ar8 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+Bus_Support:I(log(GDP.Per.Capita), data=Project_Data)
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8)),
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
ar8 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+Bus_Support:I(log(GDP.Per.Capita), data=Project_Data)
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8)),
ar8 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+Bus_Support:I(log(GDP.Per.Capita), data=Project_Data))
ar8 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+Bus_Support:I(log(GDP.Per.Capita), data=Project_Data))
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
### Setup for RStudio to work with data
#Clear the working space
rm(list = ls())
#Set working directory
#setwd("C:/Users/Justin Hurcombe/Documents/ECON2509-Econometrics/Final Project")
#getwd()
#Loads all needed packages
library(tidyverse)
library(doBy)
library(foreign)
library(knitr)
library(lmtest)
library(readstata13)
library(sandwich)
library(stargazer)
library(AER)
library(gdata)
library(wooldridge)
library(openintro)
library(readxl)
library(readr)
library(dplyr)
#Calculates heteroskedastic-robust errors
cse=function(reg){
rob=sqrt(diag(vcovHC(reg,type="HC1")))
return(rob)
}
### Data section
## Creating dataframe from three data sources, all available on worldbank.org
# Loads all csv files as separate data frames
Countries <- read.csv("Countries.csv")
CO2 <- read.csv("CO2.csv")
FDI <- read.csv("FDI.csv")
# Creates and formats all dataframes into 2020 economic indicators, CO2 emissions, and FDI net imports per country
Countries_2020 <- Countries[Countries$Year=="2020",]
CO2_2020 <- CO2[,c("Country.Name","X2020..YR2020.")] %>% rename(CO2=X2020..YR2020.)
FDI_2020 <- FDI[,c("Country.Name","X2020..YR2020.")] %>% rename(FDI=X2020..YR2020.)
# Merge all three dataframes into one single dataframe
list_df <- list(Countries_2020,CO2_2020,FDI_2020)
Final_Data <- list_df %>% reduce(inner_join, by="Country.Name")
# Rename data columns so it's easier to wprk with
Final_Data <- rename(Final_Data,Per_Agri=Agriculture....GDP., Bus_Support=Ease.of.Doing.Business, Per_Edu=Education.Expenditure....GDP., Per_Export=Export....GDP., Per_Health=Health.Expenditure....GDP., Per_Import=Import....GDP., Per_Industry=Industry....GDP., Per_Service=Service....GDP.)
# Convert new columns CO2 and FDI from characters to numbers
Final_Data$CO2 <- as.numeric(Final_Data$CO2)
Final_Data$FDI <- as.numeric(Final_Data$FDI)
## Removing NULL values
# Finding how much of dataset consists of NULL values
sum(is.na(Final_Data))/(nrow(Final_Data)*ncol(Final_Data)) * 100
sum(is.na(Final_Data))
colSums(is.na(Final_Data))
# Removing unnecessary columns: Country.Code, Year, Inflation.Rate, Unemployment, Land, and Continent.Name
Sub_Final_Data <- subset(Final_Data, select= -c(Country.Code,Year,Inflation.Rate,Unemployment,Land,Continent.Name))
# Drop rows with NULL values in CO2 and FDI columns
Sub_Final_Data <- subset(Sub_Final_Data, CO2 != ".." & FDI != "..")
# Removing countries with null values in Net Trade, which contain countries with a small or immeasurable amount of foreign trade
Final_Data_With_Trade <- subset(Sub_Final_Data, is.na(Net.Trade) == FALSE)
# Filling any leftover null values with zero. This removes the last of the null values and completes the data cleaning
Project_Data <- replace(Final_Data_With_Trade, is.na(Final_Data_With_Trade), 0)
##Dummy Variable for if country is a net exporter. Positive if net trade is greater than 1, and 0 if otherwise
Project_Data$Exporter = ifelse(Project_Data$Net.Trade > 0, 1, 0)
## Re-scaling the data so the numbers are easier to interpret
# Dividing GDP, R&D, Population, Export, Import, Education.Expenditure, Health Expenditure, Net Trade, and FDI by 1,000,000,000
Project_Data$GDP <- Project_Data$GDP / 1000000000
Project_Data$R.D <- Project_Data$R.D / 1000000000
Project_Data$Population <- Project_Data$Population / 1000000000
Project_Data$Export <- Project_Data$Export / 1000000000
Project_Data$Import <- Project_Data$Import / 1000000000
Project_Data$Education.Expenditure <- Project_Data$Education.Expenditure / 1000000000
Project_Data$Health.Expenditure <- Project_Data$Health.Expenditure / 1000000000
Project_Data$Net.Trade <- Project_Data$Net.Trade / 1000000000
Project_Data$FDI <- Project_Data$FDI / 1000000000
# Dividing Population Density by 1,000
Project_Data$Population.Density <- Project_Data$Population.Density / 1000
# Dividing GDP Per Capita by 1,000
Project_Data$GDP.Per.Capita <- Project_Data$GDP.Per.Capita / 1000
## Cleans workspace of all dataframes used to build the final dataframe
rm(list=c("CO2","CO2_2020","Countries","Countries_2020","FDI","FDI_2020","list_df","Final_Data", "Sub_Final_Data", "Final_Data_With_Trade"))
## Summarizes the data
str(Project_Data)
Project_Data$Exporter = ifelse(Project_Data$Net.Trade > 0, 1, 0)
Project_Data <- unique(Project_Data)
## Exploratory Data Analysis (EDA)
### Summary Statistics
# Display summary statistics for key variables in the dataset
stargazer(Project_Data, type="text", digits=2, summary.stat=c("n", "mean", "median", "sd"), title="Summary Statistics", flip=FALSE)
# Create histogram plot for key variables CO2 Emissions and FDI
par(mfrow = c(2, 2)) # Set up a 2x2 grid for plots
hist(Project_Data$CO2, main = "Distribution of CO2 Emissions", xlab = "CO2 Emissions", col = "lightblue", border = "black")
hist(Project_Data$FDI, main = "Distribution of Net Foreign Direct Investment", xlab = "Net FDI (US$)", col = "purple", border = "black")
# Scatterplot of CO2 vs FDI
ggplot(Project_Data, aes(x = FDI, y = CO2)) +
geom_point(col = "lightblue3") +
labs(title = "Scatterplot of CO2 Emissions vs Foreign Direct Investment",
x = "Net Foreign Direct Investment (US$)",
y = "CO2 Emissions (Metric Ton per Capita")
# Creates new variable for the natural log of CO2
Project_Data$log_CO2 <- log(Project_Data$CO2)
ggplot(Project_Data, aes(x = FDI, y = log_CO2)) +
geom_point(col = "lightblue3") +
labs(title = "Scatterplot of CO2 Emissions vs Foreign Direct Investment",
x = "Net Foreign Direct Investment (US$)" ,
y = "Natural Log of CO2 Emissions")
### Basic Regression
# Runs various regressions on key variables and
lr1 <- lm(log(CO2)~FDI, data=Project_Data)
lr2 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) , data=Project_Data)
lr3 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) + Population.Density, data=Project_Data)
lr4 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) + Population.Density + Per_Agri, data=Project_Data)
lr5 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) + Population.Density + Per_Agri + Per_Industry, data=Project_Data)
lr6 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) + Population.Density+ Per_Agri + Per_Industry + Export + Import, data=Project_Data)
lr7 <- lm(log(CO2)~FDI + log(GDP.Per.Capita) + Per_Industry + Per_Agri,data=Project_Data)
stargazer(lr1, lr2, lr3, lr4, lr5, lr6, lr7, se=list(cse(lr1),cse(lr2),cse(lr3),cse(lr4),cse(lr5),cse(lr6),cse(lr7)),
title="Factors affecting CO2 Emissions", type="text", star.cutoffs=NA, df=FALSE, digits=3)
cor(Project_Data$Per_Agri, Project_Data$Per_Industry)
stargazer(lr7, se=list(cse(lr7)),
title="Factors affecting CO2 Emissions", type="text", star.cutoffs=NA, df=FALSE, digits=3)
cor(Project_Data$Per_Agri, Project_Data$Per_Industry)
### F-tests conducted to determine if variables should be included in the model
# F-test on whether Per_Industry and Per_Agri are both statistically different from zero in model 6
lht(lr6,c("Per_Industry=0","Per_Agri=0"), white.adjust="hc1")
# F-test on whether Export and Import are both statistically different form zero in model 6
lht(lr6, c("Export=0", "Import=0"), white.adjust="hc1")
# F-test on whether Per_Industry and Per_Agri are both statistically different from zero in model 7
lht(lr7, c("Per_Industry=0","Per_Agri=0"),white.adjust="hc1")
### Here is where we test alternate regression models based on the the base model found above.
## Alternate regression part 1: quadratic and cubic models vs linear model
# Alternate regression 1: adding FDI squared to the base model
ar1 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+I(FDI^2),data=Project_Data)
# Alternate regression 2: adding FDI squared and FDI cubed to the base model
ar2 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+I(FDI^2)+I(FDI^3),data=Project_Data)
## Alternate regression part 2: adding additional regressors to the base model
# Alternate regression 3: adding education expenditure (% GDP) to base model
ar3 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Per_Edu,data=Project_Data)
# Alternate regression 4: adding health expenditure (% GDP) to base model
ar4 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Per_Health,data=Project_Data)
# Alternate regression 5: adding education expenditure (% GDP) and health expenditure (% GDP) to base model
ar5 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Per_Edu+Per_Health,data=Project_Data)
# F-test to see if Per_Edu and Per_Health should be added to the model together
lht(ar5,c("Per_Edu=0","Per_Health=0"),white.adjust="hc1")
## Alternate regression part 3: taking the square of the natural log of GDP per Capita to reflect the quadratic relationship with GDP per Capita and Environment Degradation shown in the Kuznetz Curve.
# Alternate regression 6: natural log of GDP per Capita squared
ar6 <- lm(log(CO2)~FDI + I(log(GDP.Per.Capita)) + I(log(GDP.Per.Capita)^2) + Per_Industry + Per_Agri,data=Project_Data)
## Alternate regression part 4: does innovation help climate change?
# Alternate regression 7: including all possible interaction variables between FDI, R.D, log(GDP.Per.Capita), and Bus_Support
ar7 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+FDI:R.D+FDI:I(log(GDP.Per.Capita))+R.D:I(log(GDP.Per.Capita))+FDI:Bus_Support+Bus_Support:I(log(GDP.Per.Capita)), data=Project_Data)
# F-test to see if Bus_Support and R.D variables are both statistically different from zero
lht(ar7,c("Bus_Support=0","R.D=0"),white.adjust="hc1")
# Alternate regression 8: regression 7 with removing any interaction variables that fail a t-test
ar8 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+Bus_Support:I(log(GDP.Per.Capita), data=Project_Data))
ar8 <- lm(log(CO2)~FDI+I(log(GDP.Per.Capita))+Per_Industry+Per_Agri+Bus_Support+R.D+Bus_Support:I(log(GDP.Per.Capita)), data=Project_Data)
stargazer(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8, se=list(cse(ar1),cse(ar2),cse(ar3),cse(ar4),cse(ar5),cse(ar6),cse(ar7),cse(ar8)),
title="Alternative Regression Models", type="text", star.cutoffs=NA, df=FALSE, digits=3)
### Setup for RStudio to work with data
#Clear the working space
rm(list = ls())
#Set working directory
#setwd("C:/Users/Justin Hurcombe/Documents/ECON2509-Econometrics/Final Project")
#getwd()
#Loads all needed packages
library(tidyverse)
library(doBy)
library(foreign)
library(knitr)
library(lmtest)
library(readstata13)
library(sandwich)
library(stargazer)
library(AER)
library(gdata)
library(wooldridge)
library(openintro)
library(readxl)
library(readr)
library(dplyr)
#Calculates heteroskedastic-robust errors
cse=function(reg){
rob=sqrt(diag(vcovHC(reg,type="HC1")))
return(rob)
}
### Data section
## Creating dataframe from three data sources, all available on worldbank.org
# Loads all csv files as separate data frames
Countries <- read.csv("Countries.csv")
setwd("C:/Users/Justin Hurcombe/Documents/ECON2509-Econometrics/Final Project")
Countries <- read.csv("Countries.csv")
Countries <- read.csv("Countries.csv")
CO2 <- read.csv("CO2.csv")
FDI <- read.csv("FDI.csv")
### Setup for RStudio to work with data
#Clear the working space
rm(list = ls())
#Set working directory
#setwd("C:/Users/Justin Hurcombe/Documents/ECON2509-Econometrics/Final Project")
#getwd()
#Loads all needed packages
library(tidyverse)
library(doBy)
library(foreign)
library(knitr)
library(lmtest)
library(readstata13)
library(sandwich)
library(stargazer)
library(AER)
library(gdata)
library(wooldridge)
library(openintro)
library(readxl)
library(readr)
library(dplyr)
#Calculates heteroskedastic-robust errors
cse=function(reg){
rob=sqrt(diag(vcovHC(reg,type="HC1")))
return(rob)
}
### Data section
## Creating dataframe from three data sources, all available on worldbank.org
# Loads all csv files as separate data frames
Countries <- read.csv("Countries.csv")
Countries <- read.csv("Countries.csv")
CO2 <- read.csv("CO2.csv")
FDI <- read.csv("FDI.csv")
